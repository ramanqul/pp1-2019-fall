Boolean Algebra:

AND operation:
0 0 = 0
0 1 = 0
1 0 = 0
1 1 = 1
OR operation:
0 0 = 0
0 1 = 1
1 0 = 1
1 1 = 1
NOT(negation) operation:
!0 = 1
!1 = 0
XOR operation:
0 0 = 0
0 1 = 1
1 0 = 1
1 1 = 0

X AND (Y OR X) = X
X && (Y || X)  //c++ style

X XOR (Y XOR X) = T or F
X ^ (Y ^ X)
============================
a or b or c
a || b || c
============================
a and (a or b) or (a or c)
a && (a || b) || (a || c)
============================
NOT X OR NOT Y
!X || !Y
============================
a > b
a != b
a == b
a < b
a >= b
a <= b
============================
Bitwise calculation:
7 = 111
5 = 101

============================
    111
AND 101
--------
    101 = 5
 
    111
OR  101
--------
    111 = 7

     111
XOR  101
--------
     010 = 2

NOT 1 = 0
NOT 0 = 1

NOT 7 = 0
NOT 5 = 010 = 0
NOT 0 = 1
























 


























